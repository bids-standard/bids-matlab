---
name: 'octave: tests'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
    - main
  pull_request:
    branches: ['*']

  # to run on PR opened by other workflows (to update schema)
  pull_request_target:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  OCTFLAGS: --no-gui --no-window-system --silent

jobs:
  test:

    if: |
      github.event_name == 'push' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && !contains(fromJSON('["github-actions[bot]","dependabot[bot]","pre-commit-ci[bot]"]'), github.event.pull_request.user.login)) ||
      (github.event_name == 'pull_request_target' && contains(fromJSON('["github-actions[bot]","dependabot[bot]","pre-commit-ci[bot]"]'), github.event.pull_request.user.login))

    strategy:
      fail-fast: false
      matrix:
        test: [slow, fast]

    runs-on: ubuntu-latest

    steps:

    - name: Clone bids-matlab
      uses: actions/checkout@v5
      with:
        ref: ${{ github.event.pull_request.head.sha || github.sha }}
        submodules: true
        fetch-depth: 1

    - name: Install dependencies
      run: |
        sudo apt-get -y -qq update
        sudo apt-get -y install unzip wget

    - name: Install Deno
      uses: denoland/setup-deno@v2
      with:
        deno-version: v1.x
    - name: Install bids validator
      run: deno install -Agf -n bids-validator jsr:@bids/validator

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install bids-example
      run: |
        cd tests
        make data

    - name: Install Moxunit and MOcov
      run: |
        git clone https://github.com/MOxUnit/MOxUnit.git --depth 1
        git clone https://github.com/MOcov/MOcov.git --depth 1

    - name: Install octave
      run: |
        sudo apt-get -y -qq update
        sudo apt-get -y install \
          octave \
          octave-dev\
          octave-common \
          octave-io \
          octave-image \
          octave-signal \
          octave-statistics
        make -C MOxUnit install
        make -C MOcov install

    - name: Install JSONio
      run: |
        git clone https://github.com/gllmflndn/JSONio.git --depth 1
        cd JSONio
        mkoctfile --mex jsonread.c jsmn.c -DJSMN_PARENT_LINKS
        octave $OCTFLAGS --eval "addpath(fullfile(pwd)); savepath();"

    - name: Run fast tests Octave
      if: matrix.test == 'fast'
      run: |
        octave $OCTFLAGS --eval "success = run_tests(); assert(success);"

    - name: Run slow tests Octave
      if: matrix.test == 'slow'
      run: |
        export SLOW=true
        octave $OCTFLAGS --eval "success = run_tests(); assert(success);"
